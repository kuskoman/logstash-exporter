#!/usr/bin/env bash

set -eo pipefail

scriptName="$(dirname "$0")/$(basename "$0")"

function getHelp() { # get descriptions and commands from Makefile
    commands=()
    descriptions=()

    while IFS= read -r line; do
        if (( i % 2 == 0 )); then
            descriptions+=("${line/#\#:[ ]*/}")
        else
            commands+=("$(cut -d : -f 1 <<< "$line")")
        fi
        ((i++))
    done < <(grep -B1 -E "^[a-zA-Z0-9_-]+\:([^\=]|$)" ./Makefile | grep -v -- --)
}

FILE=README.md

getHelp

startLine=$(grep -n "^#### Available Commands" "$FILE" | cut -d : -f 1)
(( startLine += 2 ))
endLine=$(grep -n "^#### File Structure" "$FILE" | cut -d : -f 1)
(( endLine -= 2 ))

# Updates "Available Commands" section:
if (( startLine <= endLine )); then
    sed -i "${startLine},${endLine}d" "$FILE" # deletion of previous descriptions
fi

function createAsterisks() {
    local count=$1
    local str=""
    for ((i=0; i<count; i++)); do
        str+='*'
    done
    echo "$str"
}

function printAvailableCommands() {
    curLine=$startLine
    stringToWrite="<!--- GENERATED by $scriptName --->"
    commentLen=${#stringToWrite}
    (( commentLen -= 11 ))

    sed -i "${curLine}i\\${stringToWrite}" "$FILE"
    (( curLine++ ))

    sed -i "${curLine}i\\" "$FILE"  # empty line
    (( curLine++ ))

    for (( i = 0; i < ${#commands[@]}; i++ )); do
        stringToWrite="- \`make ${commands[$i]}\`: ${descriptions[$i]}."
        sed -i "${curLine}i\\${stringToWrite}" "$FILE"
        (( curLine++ ))
    done

    sed -i "${curLine}i\\" "$FILE"  # empty line
    (( curLine++ ))

    stringToWrite="<!--- $(createAsterisks $commentLen) --->"
    sed -i "${curLine}i\\${stringToWrite}" "$FILE"
    (( curLine++ ))
}

echo 'Updating "Available Commands" section...'
printAvailableCommands

# Updates "Example Usage" section:
startLine=$(grep -n "^#### Example Usage" "$FILE" | cut -d : -f 1)
(( startLine += 2 ))
endLine=$(grep -n "^## Helper Scripts" "$FILE" | cut -d : -f 1)
(( endLine -= 2 ))

if (( startLine <= endLine )); then
    sed -i "${startLine},${endLine}d" "$FILE" # deletion of previous descriptions
fi

function printExampleUsage() {
    curLine=$startLine
    stringToWrite="<!--- GENERATED by $scriptName --->"
    commentLen=${#stringToWrite}
    (( commentLen -= 11 ))

    sed -i "${curLine}i\\${stringToWrite}" "$FILE"
    (( curLine++ ))

    sed -i "${curLine}i\\" "$FILE"  # empty line
    (( curLine++ ))

    for (( i = 0; i < ${#commands[@]}; i++ )); do
        stringToWrite="${descriptions[$i]}:"
        sed -i "${curLine}i\\${stringToWrite}" "$FILE"
        (( curLine++ ))

        sed -i "${curLine}i\\" "$FILE"
        (( curLine++ ))

        stringToWrite="    make ${commands[$i]}" # 4 spaces for tab (DON'T CHANGE IT)
        sed -i "${curLine}i\\${stringToWrite}" "$FILE"
        (( curLine++ ))

        sed -i "${curLine}i\\" "$FILE"
        (( curLine++ ))
    done

    stringToWrite="<!--- $(createAsterisks $commentLen) --->"
    sed -i "${curLine}i\\${stringToWrite}" "$FILE"
    (( curLine++ ))
}

echo 'Updating "Example Usage" section...'
printExampleUsage

echo 'Done.'
